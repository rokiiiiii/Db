drop database if exists shoos1;
create database if not exists shoos1;
use shoos1;


create table shoeСategories(
categoryName varchar(50) primary key,
guaranteePeriod int,
careRules varchar(50),
imgPath varchar(50),
imgName varchar(10000),
dostyp bool
);

create table goods(
goodsName varchar(50) primary key,
categoryName varchar(50) references shoeCategories(categoryName) on update cascade on delete cascade,
producer varchar(50),
material varchar(50),
color varchar(50),
price int,
quantityInStock int,
dostyp bool
);

create table sales(
saleId int primary key NOT NULL AUTO_INCREMENT,
goodsName varchar(50) references goods(goodsName) on update cascade on delete cascade,
categoryName varchar(50) references shoeСategories(categoryName) on update cascade on delete cascade,
size int,
count int,
discount int,
saleDate datetime
);

insert into shoeСategories values
									('Кате1', '12', 'Правила1','Force.jpg','Force.jpg',1),
									( 'Категория2', '6', 'Правила2','Force.jpg','Force.jpg',1),
                                    ( 'Категория3', '0', 'Правила3','Force.jpg','Force.jpg',1);
select * from shoeСategories;
                                   
insert into goods values
						( 'Обувь1','Кате1',  'Производитель1', 'Материал1', 'Синий', '100', '10',1),
                        ( 'Обувь4', 'Категория2',  'Производитель4', 'Материал4', 'Белый', '100', '20',0),
                        ( 'Обувь3', 'Категория3',  'Производитель3', 'Материал3', 'Чёрный', '50', '201',1);
select * from goods;
                       
insert into sales(goodsName,categoryName,size,count,discount,saleDate) values
						(  'Обувь1','Кате1', '31', '1' , '10', '2022-04-12'),	
				
                        ( 'Обувь3','Категория3', '40', '11' , '0', curdate());
                        
					
select * from sales;

#1
select goods.price,(goods.price-sales.discount) from goods inner join sales on goods.categoryName=sales.categoryName;
#2
select goodsName,producer,material,color,price from goods where price>50;
#3
select goods.goodsName,goods.producer,goods.material,goods.color,goods.price, max(quantityInStock) from goods;
#4
select goods.goodsName,goods.price,sales.saleDate from goods inner join sales on goods.categoryName=sales.categoryName where sales.saleDate=curdate() and goods.price<51;
#5
select shoeСategories.*, goods.price,avg(goods.price) from shoeСategories inner join goods on shoeСategories.categoryName=goods.categoryName group by shoeСategories.categoryName having avg(goods.price)<51;
#6
select sum(goods.price) from goods inner join sales on goods.goodsName=sales.goodsName where month(saleDate)=month(curdate());
#7
select sum(goods.price),sales.saleDate from goods inner join sales on goods.goodsName=sales.goodsName group by sales.saleDate;
#8 
select sales.saleId,count(sales.saleId),goods.categoryName from goods inner join sales on goods.goodsName=sales.goodsName group by sales.goodsName;
#9
select goodsName from goods where goodsName not in (select goodsName from sales);
#10
select shoeСategories.categoryName,sales.goodsName,avg(sales.discount) from shoeСategories inner join sales on shoeСategories.categoryName=sales.categoryName group by shoeСategories.categoryName;